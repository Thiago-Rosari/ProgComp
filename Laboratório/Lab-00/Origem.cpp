#include <iostream>
using namespace std;

int main() {

	/*====================================================================================
		1. Pesquise sobre as gerações das linguagens de programação e as diferenças entre:
			• Linguagens não-estruturadas
			• Linguagens estruturadas
			• Linguagens orientadas a objeto

		
		* A programação não estruturada é um tipo de programação que 
		geralmente executa em ordem sequencial, ou seja, esses programas simplesmente 
		não saltam de nenhuma linha de código e cada linha é executada sequencialmente.
		Ex: BASIC, FORTRAN

		* A programação estruturada é um tipo de programação que geralmente 
		converte programas grandes ou complexos em pedaços de código pequenos e mais gerenciáveis.
		Esses pequenos códigos são geralmente conhecidos como funções ou módulos ou 
		subprogramas de grandes programas complexos.
		Ex: Pascal, C

		*A mais usada nos dias de hoje. Atrela as sub-rotinas a um conjunto de dados,
		expande ainda mais as opções de reuso de código, trata os problemas de forma mais intuitiva e
		facilita o tratamento de erros
		Ex: C++, C#, Java, Python

	-------------------------------------------------------------------------------------------------------------

		2. Quais as linguagens de programação mais populares atualmente e em que tipos de aplicações elas são usadas?

			* Java: 
		é a linguagem de programação mais usada hoje em dia, provavelmente por ser simples e de fácil compreensão. 
		Mais de nove milhões de programadores a utilizam e mais de sete bilhões de dispositivos executam 
		aplicativos escritos em Java
			* C: 
		embora tenha sido criada entre 1969 e 1972, ainda é uma das linguagens de programação mais usadas. 
		Flexível, robusta, versátil e fácil de entender, é ideal para o desenvolvimento de todos os tipos de programas. 
		É uma boa opção para quem está começando a programar.
			* Python: 
		é uma linguagem interpretada, multiplataforma e multiparadigma, podendo ser usada em praticamente 
		todos os tipos de aplicativo. É de fácil compreensão e, portanto, ideal para iniciantes.
			* C++: 
		é a evolução direta do C, porém voltada a objetos — ou seja, se assemelha mais à linguagem humana. 
		Muitos programas de design gráfico são escritos nesse programa pela sua facilidade de trabalhar 
		com elementos visuais.
			* C#: 
		também conhecido como C Sharp, surgiu a partir do C e do C++. 
		Foi criado em 2000 e se destaca pela facilidade no desenvolvimento 
		de aplicativos no sistema operacional Windows.

	----------------------------------------------------------------------------------------------------------------

		3. Qual a diferença entre uma linguagem de programação compilada e uma interpretada? 
		Existe diferença de desempenho entre elas? Dê exemplos de linguagens dos dois tipos.

		* Em uma linguagem compilada, a máquina de destino traduz o programa diretamente, e são mais rápidas.
		C, C++, Rust, Go
		Em uma linguagem interpretada, o código fonte não é traduzido diretamente pela máquina de destino. 
		Em vez disso, o interpretador, lê e executa o código.
		PHP, Ruby Python, JavaScript

	----------------------------------------------------------------------------------------------------------------

		4. Quais os editores de código mais usados atualmente? Como o Visual Studio está posicionado nesse ranking?

		* 1. VSCode 
		  2. ATOM 
		  3. Vim 
		  4. CodeAnywhere 
		  5. Brackets
		  6. Sublime Text
		  7. Notepad++

	----------------------------------------------------------------------------------------------------------------

		5. Qual a diferença entre um editor de código e um ambiente de desenvolvimento? Cite exemplos de ambos. 
		O Visual Studio está classificado em qual categoria?

		* Editores de código são editores de texto com poderosos recursos integrados e funcionalidades 
		especializadas para simplificar e acelerar o processo de edição de código.
		Ex: Notepad++, Atom, Sublime Text, VS Code
		* Já um IDE, por outro lado, é um conjunto de ferramentas de desenvolvimento de software 
		projetadas para tornar a codificação mais fácil.
		Ex: Visual Studio, Xcode, Eclipse, PyCharm

	--------------------------------------------------------------------------------------------------------------

		6. Quais os principais ambientes de desenvolvimento para criação de código C++?

		* G++, Dev-C++, Ultimate++, Eclipse, NetBeans

	--------------------------------------------------------------------------------------------------------------

		7. Quais os principais compiladores para a linguagem C++?

		* GNU, Clang/LLVM, Microsoft Visual C++, Oracle C++ Compiler


	*/
}